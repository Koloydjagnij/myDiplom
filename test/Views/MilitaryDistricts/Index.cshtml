@using test.ViewModels
@model test.Views.MilitaryDistricts.IndexViewModel

@{
    ViewData["Title"] = "Военные округа";
}

<p>
    <div class="form-group">
        <a asp-action="Create"><input type="submit" value="Создать новую запись" class="btn btn-default" /></a>
    </div>

</p>
<table class="table">
    <thead>
        <tr>
                <th>
                    @Html.DisplayNameFor(model => model.MilitaryDistrict.First().NameMilitaryDistrict)
                </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.MilitaryDistrict) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.NameMilitaryDistrict)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.IdMilitaryDistrict">Изменить</a> |
                <a asp-action="Details" asp-route-id="@item.IdMilitaryDistrict">Информация</a> |
                <a asp-action="Delete" asp-route-id="@item.IdMilitaryDistrict">Удалить</a>
            </td>
        </tr>
}
    </tbody>
</table>
@if (Model.PageViewModel.HasPreviousPage)
{
    <a asp-action="Index"
       asp-route-page="@(Model.PageViewModel.PageNumber - 1)"
       class="btn btn-default btn">
        <i class="glyphicon glyphicon-chevron-left"></i>
        Назад
    </a>
}
@if (Model.PageViewModel.HasNextPage)
{
    <a asp-action="Index"
       asp-route-page="@(Model.PageViewModel.PageNumber + 1)"
       class="btn btn-default btn">
        Вперед
        <i class="glyphicon glyphicon-chevron-right"></i>
    </a>
}