@using test.Views.Enrollees
@model test.Views.Enrollees.IndexViewModel
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@addTagHelper "*, test"

@{
    ViewData["Title"] = "Список абитуриентов";
}
<div class="row bottom-left">
    <div class="col-md-4 col-lg-4 col-xl-4">
        <div class="h2">Список абитуриентов</div>
    </div>
    <div class="col-md-4 col-lg-4 col-xl-4">
        @if (SignInManager.IsSignedIn(User) && (User.IsInRole("Admin") || User.IsInRole("AddAbitur")))
        {

            <a asp-action="Create" class="container"><input type="submit" value="Создать новую запись" class="btn btn-default btn-group-lg" /></a>

        }
    </div>
</div>

<form asp-action="Index" id="FiltersForm">
    <div class="panel panel-default">
        <div class="panel-heading">
            <h4 class="panel-title">
                <div class="row">
                    <div class="col-md-1 col-lg-1 col-xl-1 text-right">
                        <h4>ФИО:</h4>
                    </div>
                    <div class="col-md-3 col-lg-3 col-xl-3 ">
                        @Html.TextBox("name", Model.FilterViewModel.SelectedName, htmlAttributes: new { @class = "form-control" })
                    </div>
                    <div class="col-md-1 col-lg-1 col-xl-1 text-right">
                        <input type="submit" value="Найти" class="btn btn-default" />
                    </div>
                    <div class="col-md-1 col-lg-1 col-xl-1 text-right">
                        <a class="btn btn-default" data-toggle="collapse" href="#collapseOne">
                            Фильтры
                        </a>
                    </div>
                    <div class="col-md-1 col-lg-1 col-xl-1 text-right">
                        @if (Model.FilterViewModel.isFiltrated)
                        {

                            <label class="control-label">
                                <img src="~/images/isFilter.png" width="30" height="30" title="Применены фильтры" style="vertical-align:central" class="img-responsive" />
                            </label>
                        }
                    </div>


                    <div class="col-md-5 col-lg-5 col-xl-5 text-right">
                        <div class="btn-group" data-toggle="buttons">
                            @if (Model.PageViewModel.PageSize == 5)
                            {
                                <label class="btn btn-default active">
                                    <input name="PageViewModel_PageSize" type="radio" value="5" checked="checked"> 5
                                </label>
                            }
                            else
                            {
                                <label class="btn btn-default">
                                    <input name="PageViewModel_PageSize" type="radio" onchange="this.form.submit();" value="5"> 5
                                </label>
                            }

                            @if (Model.PageViewModel.PageSize == 10)
                            {
                                <label class="btn btn-default active">
                                    <input name="PageViewModel_PageSize" type="radio" value="10" checked="checked"> 10
                                </label>
                            }
                            else
                            {
                                <label class="btn btn-default">
                                    <input name="PageViewModel_PageSize" type="radio" onchange="this.form.submit();" value="10"> 10
                                </label>
                            }

                            @if (Model.PageViewModel.PageSize == 20)
                            {
                                <label class="btn btn-default active">
                                    <input name="PageViewModel_PageSize" type="radio" value="20" checked="checked"> 20
                                </label>
                            }
                            else
                            {
                                <label class="btn btn-default">
                                    <input name="PageViewModel_PageSize" type="radio" onchange="this.form.submit();" value="20"> 20
                                </label>
                            }

                            @if (Model.PageViewModel.PageSize == 30)
                            {
                                <label class="btn btn-default active">
                                    <input name="PageViewModel_PageSize" type="radio" value="30" checked="checked"> 30
                                </label>
                            }
                            else
                            {
                                <label class="btn btn-default">
                                    <input name="PageViewModel_PageSize" type="radio" onchange="this.form.submit();" value="30"> 30
                                </label>
                            }
                        </div>

                    </div>
                </div>
            </h4>
        </div>

    </div>
    <div id="collapseOne" class="panel-collapse collapse">
        <div class="panel-body">
            <!--Форма фильтров-->

            <div class="row">
                <div class="col-md-4 col-lg-4 col-xl-4 text-right">
                    <label class="control-label">Первый приоритет: </label>
                    @Html.ListBox("fSpec", Model.FilterViewModel.FirstSpecialities as MultiSelectList,
                            htmlAttributes: new { @class = "form-control" })
                </div>

                <div class="col-md-4 col-lg-4 col-xl-4 text-right">
                    <label class="control-label">Текущее направление: </label>
                    @Html.ListBox("cSpec", Model.FilterViewModel.CurrentSpecialities as MultiSelectList,
                            htmlAttributes: new { @class = "form-control" })
                </div>

                <div class="col-md-4 col-lg-4 col-xl-4 text-right">
                    <label class="control-label">Группа: </label>
                    @Html.ListBox("groups", Model.FilterViewModel.Groups as MultiSelectList,
                            htmlAttributes: new { @class = "form-control" })
                </div>

                <div class="col-md-4 col-lg-4 col-xl-4 text-right">
                    <label class="control-label">Тип образования: </label>
                    @Html.ListBox("eduType", Model.FilterViewModel.EduTypes as MultiSelectList,
                            htmlAttributes: new { @class = "form-control" })
                </div>

                <div class="col-md-4 col-lg-4 col-xl-4 text-right">
                    <label class="control-label">Семейное положение: </label>
                    @Html.DropDownList("maritalStatus", Model.FilterViewModel.MaritalStatuses as MultiSelectList,
                            htmlAttributes: new { @class = "form-control" })
                </div>

                <div class="col-md-4 col-lg-4 col-xl-4 text-right">
                    <label class="control-label">Преимущественное право: </label>
                    @Html.DropDownList("preemptiveRight", Model.FilterViewModel.PreemptiveRights as MultiSelectList,
                            htmlAttributes: new { @class = "form-control" })
                </div>


                <div class="col-md-4 col-lg-4 col-xl-4 text-right">
                    <input id="minGradePoint" name="minGradePoint" type="hidden" value="0" />
                    <input id="maxGradePoint" name="maxGradePoint" type="hidden" value="5" />
                    <label class="control-label" for="slider-range">Средний балл: </label>
                    <input type="text" id="amount" readonly style="border:0; color:#333; font-weight:bold;">
                    <div id="slider-range"></div>
                </div>
                <div class="col-md-4 col-lg-4 col-xl-4 text-right">
                    <input id="minYear" name="minYear" type="hidden" value="1970" />
                    <input id="maxYear" name="maxYear" type="hidden" value="@(DateTime.Now.Year+5)" />
                    <label class="control-label" for="slider-range-year-edu">Год выпуска: </label>
                    <input type="text" id="amount-year-edu" readonly style="border:0; color:#333; font-weight:bold;">
                    <div id="slider-range-year-edu"></div>
                </div>
                <div class="col-md-12 col-lg-12 col-xl-12 text-right">
                    <br />
                </div>

                <div class="col-md-12 col-lg-12 col-xl-12 text-right">
                    <input type="submit" value="Применить" class="btn btn-default" />
                    <a asp-action="Index" asp-route-PageViewModel_PageSize="@Model.PageViewModel.PageSize"><div class="btn btn-default btn-group-lg">Сбросить фильтры</div></a>
                </div>
            </div>
        </div>
    </div>

</form>




<table class="table">
    <thead>
        <tr>
            <th>
                <sort-header action="Index" up="@Model.SortViewModel.Up"
                             current="@Model.SortViewModel.Current" property="@Model.SortViewModel.ProfNumSort">
                    @Html.DisplayNameFor(model => model.Enrollees.First().NumOfPersonalFile)
                </sort-header>

            </th>
            <th>
                <sort-header action="Index" up="@Model.SortViewModel.Up"
                             current="@Model.SortViewModel.Current" property="@Model.SortViewModel.SurnameSort">
                    @Html.DisplayNameFor(model => model.Enrollees.First().Surname)
                </sort-header>
            </th>
            <th>
                <sort-header action="Index" up="@Model.SortViewModel.Up"
                             current="@Model.SortViewModel.Current" property="@Model.SortViewModel.NameSort">
                    @Html.DisplayNameFor(model => model.Enrollees.First().Name)
                </sort-header>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Enrollees.First().Patronymic)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Enrollees.First().DateOfBirth)
            </th>

            <th>
                @Html.DisplayNameFor(model => model.Enrollees.First().IdEducationType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Enrollees.First().YearOfEndingEducation)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Enrollees.First().GradePointAVG)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Enrollees.First().IdFirstSpec)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Enrollees.First().IdGroup)
            </th>
            <th>
                Специа льность
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Enrollees.First().ArrivalDate)
            </th>

            <th>
                @Html.DisplayNameFor(model => model.Enrollees.First().DateOfDeduction)
            </th>


            @if (SignInManager.IsSignedIn(User) && (User.IsInRole("Admin") || User.IsInRole("EditAbitur")))
            {
                <th />
            }
            @if (SignInManager.IsSignedIn(User) && (User.IsInRole("Admin") || User.IsInRole("FullDetailAbitur")))
            {
                <th />
            }
            @if (SignInManager.IsSignedIn(User) && (User.IsInRole("Admin") || User.IsInRole("DeleteAbitur")))
            {
                <th />
            }
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Enrollees)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.NumOfPersonalFile)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Surname)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Patronymic)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DateOfBirth)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.IdEducationTypeNavigation.NameEducationType)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.YearOfEndingEducation)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.GradePointAVG)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IdFirstSpecNavigation.NameSpeciality)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IdGroupNavigation.GroupName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IdCurrentSpecNavigation.NameSpeciality)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ArrivalDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DateOfDeduction)
                </td>

                @if (SignInManager.IsSignedIn(User) && (User.IsInRole("Admin") || User.IsInRole("EditAbitur")))
                {
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.IdEnrollee"><img src="~/images/edit.png" width="500" height="500" title="Изменить" class="img-responsive" /></a>
                    </td>
                }
                @if (SignInManager.IsSignedIn(User) && (User.IsInRole("Admin") || User.IsInRole("FullDetailAbitur")))
                {
                    <td>
                        <a asp-action="Details" asp-route-id="@item.IdEnrollee"><img src="~/images/info.png" width="500" height="500" title="Просмотреть детальную информацию" class="img-responsive" /></a>
                    </td>
                }
                @if (SignInManager.IsSignedIn(User) && (User.IsInRole("Admin") || User.IsInRole("DeleteAbitur")))
                {
                    <td>
                        <a asp-action="Delete" asp-route-id="@item.IdEnrollee"><img src="~/images/delete.png" width="500" height="500" title="Перейти к удалению данной записи" class="img-responsive" /></a>
                    </td>
                }

            </tr>
        }
    </tbody>
</table>

@if (Model.PageViewModel.HasPreviousPage && Model.PageViewModel.PageNumber != 2)
{
    <a asp-action="Index"
       asp-route-page="1"
       class="btn btn-default btn">
        <i class="glyphicon glyphicon-chevron-left"></i>
        <i class="glyphicon glyphicon-chevron-left"></i>
        В начало
    </a>
}
@if (Model.PageViewModel.HasPreviousPage)
{
    <a asp-action="Index"
       asp-route-page="@(Model.PageViewModel.PageNumber - 1)"
       class="btn btn-default btn">
        <i class="glyphicon glyphicon-chevron-left"></i>
        Назад
    </a>
}

@if (Model.PageViewModel.HasNextPage || Model.PageViewModel.HasPreviousPage)
{
    <div class="btn btn-default " style="pointer-events:none;">@Model.PageViewModel.PageNumber / @(Model.PageViewModel.TotalPages)</div>
}

@if (Model.PageViewModel.HasNextPage)
{
    <a asp-action="Index"
       asp-route-page="@(Model.PageViewModel.PageNumber + 1)"
       class="btn btn-default btn">
        Вперед
        <i class="glyphicon glyphicon-chevron-right"></i>
    </a>
}


@if (Model.PageViewModel.HasNextPage)
{
    <a asp-action="Index"
       asp-route-page="@(Model.PageViewModel.TotalPages)"
       class="btn btn-default btn">
        В конец (@(Model.PageViewModel.TotalPages))
        <i class="glyphicon glyphicon-chevron-right"></i>
        <i class="glyphicon glyphicon-chevron-right"></i>
    </a>
}
@section Scripts {
    <script>
        $("#slider-range").slider({
            range: true,
            min: 0,
            max: 500,
            values: [000, 500],
            slide: function (event, ui) {
                $("#amount").val(ui.values[0] / 100 + "–" + ui.values[1] / 100);
                $("#minGradePoint").val(ui.values[0]/100);
                $("#maxGradePoint").val(ui.values[1]/100);
            }
        });
        $("#amount").val($("#slider-range").slider("values", 0)/100 +"–"+ $("#slider-range").slider("values", 1)/100);

    </script>
    <script>
        $("#slider-range-year-edu").slider({
            range: true,
            min: 1970,
            max: @DateTime.Now.Year+5,
            values: [1970, @DateTime.Now.Year+5],
            slide: function (event, ui) {
                $("#amount-year-edu").val(ui.values[0] + "–" + ui.values[1]);
                $("#minYear").val(ui.values[0]);
                $("#maxYear").val(ui.values[1]);

            }
        });
        $("#amount-year-edu").val($("#slider-range-year-edu").slider("values", 0) +"–"+ $("#slider-range-year-edu").slider("values", 1));

    </script>

    <script>
        $(document).ready(function () {
            $('#eduType').multiselect({
                enableFiltering: true,
                includeResetOption: true,
                includeSelectAllOption: false,
                maxHeight: 200
            });
        });
    </script>
    <script>
        $(document).ready(function () {
            $('#fSpec').multiselect({
                enableFiltering: true,
                includeResetOption: true,
                includeSelectAllOption: false,
                maxHeight: 200
            });
        });
    </script>
    <script>
        $(document).ready(function () {
            $('#cSpec').multiselect({
                enableFiltering: true,
                includeResetOption: true,
                includeSelectAllOption: false,
                maxHeight: 200
            });
        });
    </script>
    <script>
        $(document).ready(function () {
            $('#groups').multiselect({
                enableFiltering: true,
                includeResetOption: true,
                includeSelectAllOption: false,
                maxHeight: 200
            });
        });
    </script>
    <script>
        $(document).ready(function () {
            $('#maritalStatus').multiselect({
                enableFiltering: false,
                includeResetOption: false,
                includeSelectAllOption: false,
                maxHeight: 200
            });
        });
    </script>
    <script>
        $(document).ready(function () {
            $('#preemptiveRight').multiselect({
                enableFiltering: false,
                includeResetOption: false,
                includeSelectAllOption: false,
                maxHeight: 200
            });
        });
    </script>

}