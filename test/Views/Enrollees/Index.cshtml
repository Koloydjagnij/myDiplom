@using test.Views.Enrollees
@model test.Views.Enrollees.IndexViewModel
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@addTagHelper "*, test"

@{
    ViewData["Title"] = "Список абитуриентов";
}
<div class="row bottom-left">
    <div class="col-md-4 col-lg-4 col-xl-4">
        <div class="h2">Список абитуриентов</div>
    </div>
    <div class="col-md-4 col-lg-4 col-xl-4">
        @if (SignInManager.IsSignedIn(User) && (User.IsInRole("Admin") || User.IsInRole("AddAbitur")))
        {

            <a asp-action="Create" class="container"><input type="submit" value="Создать новую запись" class="btn btn-default btn-group-lg" /></a>

        }
    </div>
</div>

<form asp-action="Index" id="FiltersForm">
    <div class="panel panel-default">
        <div class="panel-heading">
            <div class="panel-title">
                <div class="row">
                    <div class="col-md-1 col-lg-1 col-xl-1 text-right">
                        <h4>ФИО:</h4>
                    </div>
                    <div class="col-md-3 col-lg-3 col-xl-3 ">
                        @Html.TextBox("name", Model.FilterViewModel.SelectedName, htmlAttributes: new { @class = "form-control" })
                    </div>

                    <div class="col-md-2 col-lg-2 col-xl-2">
                        <div class="col-md-2 col-lg-2 col-xl-2">
                            <h4>№:</h4>
                        </div>
                        <div class="col-md-9 col-lg-9 col-xl-9">
                            <input class="form-control" id="NumFile" name="NumFile" type="text" value="@Model.FilterViewModel.SelectedNumFile">
                        </div>
                    </div>
                    <div class="col-md-1 col-lg-1 col-xl-1 text-right">
                        <input type="submit" value="Найти" class="btn btn-default" />
                    </div>
                    <div class="col-md-1 col-lg-1 col-xl-1 text-right">
                        <a class="btn btn-default" data-toggle="collapse" href="#collapseOne">
                            Фильтры
                        </a>
                    </div>
                    <div class="col-md-1 col-lg-1 col-xl-1 text-right">
                        @if (Model.FilterViewModel.isFiltrated)
                        {

                            <label class="control-label">
                                <img src="~/images/isFilter.png" width="30" height="30" title="Применены фильтры" style="vertical-align:central" class="img-responsive" />
                            </label>
                        }
                    </div>


                    <div class="col-md-3 col-lg-3 col-xl-3 text-right">
                        <div class="btn-group" data-toggle="buttons">
                            @if (Model.PageViewModel.PageSize == 5)
                            {
                                <label class="btn btn-default active">
                                    <input name="PageViewModel_PageSize" type="radio" value="5" checked="checked"> 5
                                </label>
                            }
                            else
                            {
                                <label class="btn btn-default">
                                    <input name="PageViewModel_PageSize" type="radio" onchange="this.form.submit();" value="5"> 5
                                </label>
                            }

                            @if (Model.PageViewModel.PageSize == 10)
                            {
                                <label class="btn btn-default active">
                                    <input name="PageViewModel_PageSize" type="radio" value="10" checked="checked"> 10
                                </label>
                            }
                            else
                            {
                                <label class="btn btn-default">
                                    <input name="PageViewModel_PageSize" type="radio" onchange="this.form.submit();" value="10"> 10
                                </label>
                            }

                            @if (Model.PageViewModel.PageSize == 20)
                            {
                                <label class="btn btn-default active">
                                    <input name="PageViewModel_PageSize" type="radio" value="20" checked="checked"> 20
                                </label>
                            }
                            else
                            {
                                <label class="btn btn-default">
                                    <input name="PageViewModel_PageSize" type="radio" onchange="this.form.submit();" value="20"> 20
                                </label>
                            }

                            @if (Model.PageViewModel.PageSize == 30)
                            {
                                <label class="btn btn-default active">
                                    <input name="PageViewModel_PageSize" type="radio" value="30" checked="checked"> 30
                                </label>
                            }
                            else
                            {
                                <label class="btn btn-default">
                                    <input name="PageViewModel_PageSize" type="radio" onchange="this.form.submit();" value="30"> 30
                                </label>
                            }
                        </div>

                    </div>
                </div>
            </div>
        </div>

    </div>
    <div id="collapseOne" class="panel-collapse collapse">
        <div class="panel-body">
            <!--Форма фильтров-->

            <div class="row">
                <div class="col-md-4 col-lg-4 col-xl-4 text-right">
                    <div class="col-md-7 col-lg-7 col-xl-7 text-left">
                        <label class="control-label">Первый приоритет: </label>
                    </div>
                    @Html.ListBox("fSpec", Model.FilterViewModel.FirstSpecialities as MultiSelectList,
             htmlAttributes: new { @class = "form-control" })
                </div>

                <div class="col-md-4 col-lg-4 col-xl-4 text-right">
                    <div class="col-md-7 col-lg-7 col-xl-7 text-left">
                        <label class="control-label">Текущее направление: </label>
                    </div>
                    @Html.ListBox("cSpec", Model.FilterViewModel.CurrentSpecialities as MultiSelectList,
            htmlAttributes: new { @class = "form-control" })
                </div>

                <div class="col-md-4 col-lg-4 col-xl-4 text-right">
                    <div class="col-md-7 col-lg-7 col-xl-7 text-left">
                        <label class="control-label">Группа: </label>
                    </div>
                    @Html.ListBox("groups", Model.FilterViewModel.Groups as MultiSelectList,
             htmlAttributes: new { @class = "form-control" })
                </div>

                <div class="col-md-4 col-lg-4 col-xl-4 text-right">
                    <div class="col-md-7 col-lg-7 col-xl-7 text-left">
                        <label class="control-label">Тип образования: </label>
                    </div>
                    @Html.ListBox("eduType", Model.FilterViewModel.EduTypes as MultiSelectList,
             htmlAttributes: new { @class = "form-control" })
                </div>

                <div class="col-md-4 col-lg-4 col-xl-4 text-right">
                    <div class="col-md-7 col-lg-7 col-xl-7 text-left">
                        <label class="control-label">Семейное положение: </label>
                    </div>
                    @Html.DropDownList("maritalStatus", Model.FilterViewModel.MaritalStatuses as MultiSelectList,
             htmlAttributes: new { @class = "form-control" })
                </div>

                <div class="col-md-4 col-lg-4 col-xl-4 text-right">
                    <div class="col-md-7 col-lg-7 col-xl-7 text-left">
                        <label class="control-label">Преимущественное право: </label>
                    </div>
                    @Html.DropDownList("preemptiveRight", Model.FilterViewModel.PreemptiveRights as MultiSelectList,
             htmlAttributes: new { @class = "form-control" })
                </div>

                <div class="col-md-4 col-lg-4 col-xl-4 text-right">
                    <div class="col-md-4 col-lg-4 col-xl-4 text-left">
                        <label class="control-label">Дата рождения: </label>
                    </div>
                    <div id="DateOfBirth">
                        <input class="text-box single-line valid" data-val="true" id="DateOfBirth_Min" name="DateOfBirthMin" type="date" value="@(Model.FilterViewModel.SelectedDateOfBirthMin == null ? "" : Model.FilterViewModel.SelectedDateOfBirthMin.Value.Year.ToString() + "-" + String.Format("{0:00}", Model.FilterViewModel.SelectedDateOfBirthMin.Value.Month) + "-" + String.Format("{0:00}", Model.FilterViewModel.SelectedDateOfBirthMin.Value.Day))" aria-invalid="false">
                        – <input class="text-box single-line valid" data-val="true" id="DateOfBirth_Max" name="DateOfBirthMax" type="date" value="@(Model.FilterViewModel.SelectedDateOfBirthMax == null ? "" : Model.FilterViewModel.SelectedDateOfBirthMax.Value.Year.ToString() + "-" + String.Format("{0:00}", Model.FilterViewModel.SelectedDateOfBirthMax.Value.Month) + "-" + String.Format("{0:00}", Model.FilterViewModel.SelectedDateOfBirthMax.Value.Day))" aria-invalid="false">
                    </div>
                </div>

                <div class="col-md-4 col-lg-4 col-xl-4 text-right">
                    <div class="col-md-4 col-lg-4 col-xl-4 text-left">
                        <label class="control-label">Дата прибытия: </label>
                    </div>
                    <div id="DateOfBirth">
                        <input class="text-box valid" data-val="true" id="DateOfArrived_Min" name="DateOfArrivedMin" type="date" value="@(Model.FilterViewModel.SelectedDateArrivedMin == null ? "" : Model.FilterViewModel.SelectedDateArrivedMin.Value.Year.ToString() + "-" + String.Format("{0:00}", Model.FilterViewModel.SelectedDateArrivedMin.Value.Month) + "-" + String.Format("{0:00}", Model.FilterViewModel.SelectedDateArrivedMin.Value.Day))" aria-invalid="false">
                        – <input class="text-box single-line valid" data-val="true" id="DateOfArrived_Max" name="DateOfArrivedMax" type="date" value="@(Model.FilterViewModel.SelectedDateArrivedMax == null ? "" : Model.FilterViewModel.SelectedDateArrivedMax.Value.Year.ToString() + "-" + String.Format("{0:00}", Model.FilterViewModel.SelectedDateArrivedMax.Value.Month) + "-" + String.Format("{0:00}", Model.FilterViewModel.SelectedDateArrivedMax.Value.Day))" aria-invalid="false">
                    </div>
                </div>

                <div class="col-md-4 col-lg-4 col-xl-4 text-right">
                    <div class="col-md-4 col-lg-4 col-xl-4 text-left">
                        <label class="control-label">Дата отчисления: </label>
                    </div>
                    <div id="DateOfBirth">
                        <input class="text-box valid" data-val="true" id="DateOfDeduc_Min" name="DateOfDeduchMin" type="date" value="@(Model.FilterViewModel.SelectedDateDeducMin == null ? "" : Model.FilterViewModel.SelectedDateDeducMin.Value.Year.ToString() + "-" + String.Format("{0:00}", Model.FilterViewModel.SelectedDateDeducMin.Value.Month) + "-" + String.Format("{0:00}", Model.FilterViewModel.SelectedDateDeducMin.Value.Day))" aria-invalid="false">
                        – <input class="text-box single-line valid" data-val="true" id="DateOfDeduc_Max" name="DateOfDeducMax" type="date" value="@(Model.FilterViewModel.SelectedDateDeducMax == null ? "" : Model.FilterViewModel.SelectedDateDeducMax.Value.Year.ToString() + "-" + String.Format("{0:00}", Model.FilterViewModel.SelectedDateDeducMax.Value.Month) + "-" + String.Format("{0:00}", Model.FilterViewModel.SelectedDateDeducMax.Value.Day))" aria-invalid="false">
                    </div>
                </div>


                <div class="col-md-4 col-lg-4 col-xl-4 text-right">
                    <input id="minGradePoint" name="minGradePoint" type="hidden" value="@Model.FilterViewModel.SelectedGradePointAVG_min.ToString()" />
                    <input id="maxGradePoint" name="maxGradePoint" type="hidden" value="@Model.FilterViewModel.SelectedGradePointAVG_max.ToString() " />
                    <label class="control-label" for="slider-range">Средний балл: </label>
                    <input type="text" id="amount" readonly style="border:0; color:#333; font-weight:bold;">
                    <div id="slider-range"></div>
                </div>
                <div class="col-md-4 col-lg-4 col-xl-4 text-right">
                    <input id="minYear" name="minYear" type="hidden" value="@Model.FilterViewModel.SelectedYearEducMin" />
                    <input id="maxYear" name="maxYear" type="hidden" value="@Model.FilterViewModel.SelectedYearEducMax" />
                    <label class="control-label" for="slider-range-year-edu">Год выпуска: </label>
                    <input type="text" id="amount-year-edu" readonly style="border:0; color:#333; font-weight:bold;">
                    <div id="slider-range-year-edu"></div>
                </div>

                <div class="col-md-12 col-lg-12 col-xl-12 text-right">
                    <br />
                </div>

                <div class="col-md-12 col-lg-12 col-xl-12 text-right">
                    <input type="submit" value="Применить" class="btn btn-default" />
                    <a asp-action="Index" asp-route-PageViewModel_PageSize="@Model.PageViewModel.PageSize">
                        <div class="btn btn-default btn-group-lg">Сбросить фильтры</div>
                    </a>
                </div>

                <div class="col-md-12 col-lg-12 col-xl-12 text-right">
                    <hr>
                </div>
            </div>
        </div>
    </div>




    <table class="table">
        <thead>
            <tr>
                <th>
                    @if (Model.SortViewModel.Current == Model.SortViewModel.ProfNumSort)
                    {
                        @if (Model.SortViewModel.Up)
                        {
                            <label class="btn-link">
                                <input hidden="hidden" name="sortOrder" type="radio" onchange="this.form.submit();" value="@Model.SortViewModel.ProfNumSort"> <i class="glyphicon glyphicon-chevron-up"></i><span style="line-height: 1.6;font-weight: 700;font-size: 14px;">Личное дело</span>
                            </label>

                        }
                        else
                        {
                            <label class="btn-link ">
                                <input hidden="hidden" name="sortOrder" type="radio" onchange="this.form.submit();" value="@Model.SortViewModel.ProfNumSort"> <i class="glyphicon glyphicon-chevron-down"></i><span style="line-height: 1.6;font-weight: 700;font-size: 14px;">Личное дело</span>
                            </label>
                        }
                    }
                    else
                    {
                        <label class="btn-link">
                            <input hidden="hidden" name="sortOrder" type="radio" onchange="this.form.submit();" value="@Model.SortViewModel.ProfNumSort"><span style="line-height: 1.6;font-weight: 700;font-size: 14px;">Личное дело</span>
                        </label>
                    }

                </th>
                <th>
                    @if (Model.SortViewModel.Current == Model.SortViewModel.SurnameSort)
                    {
                        @if (Model.SortViewModel.Up)
                        {
                    <label class="btn-link">
                        <input hidden="hidden" name="sortOrder" type="radio" onchange="this.form.submit();" value="@Model.SortViewModel.SurnameSort"> <i class="glyphicon glyphicon-chevron-up"></i><span style="line-height: 1.6;font-weight: 700;font-size: 14px;">Фамилия</span>
                    </label>
                            
                        }
                        else
                        {
                    <label class="btn-link ">
                        <input hidden="hidden" name="sortOrder" type="radio" onchange="this.form.submit();" value="@Model.SortViewModel.SurnameSort"> <i class="glyphicon glyphicon-chevron-down"></i><span style="line-height: 1.6;font-weight: 700;font-size: 14px;">Фамилия</span>
                    </label>
                        }
                    }
                    else
                    {
                    <label class="btn-link">
                        <input hidden="hidden" name="sortOrder" type="radio" onchange="this.form.submit();" value="@Model.SortViewModel.SurnameSort"><span style="line-height: 1.6;font-weight: 700;font-size: 14px;">Фамилия</span>
                    </label>
                    }

                </th>
                <th>
                    @if (Model.SortViewModel.Current == Model.SortViewModel.NameSort)
                    {
                        @if (Model.SortViewModel.Up)
                        {
                            <label class="btn-link">
                                <input hidden="hidden" name="sortOrder" type="radio" onchange="this.form.submit();" value="@Model.SortViewModel.NameSort"> <i class="glyphicon glyphicon-chevron-up"></i><span style="line-height: 1.6;font-weight: 700;font-size: 14px;">Имя</span>
                            </label>

                        }
                        else
                        {
                            <label class="btn-link ">
                                <input hidden="hidden" name="sortOrder" type="radio" onchange="this.form.submit();" value="@Model.SortViewModel.NameSort"> <i class="glyphicon glyphicon-chevron-down"></i><span style="line-height: 1.6;font-weight: 700;font-size: 14px;">Имя</span>
                            </label>
                        }
                    }
                    else
                    {
                        <label class="btn-link">
                            <input hidden="hidden" name="sortOrder" type="radio" onchange="this.form.submit();" value="@Model.SortViewModel.NameSort"><span style="line-height: 1.6;font-weight: 700;font-size: 14px;">Имя</span>
                        </label>
                    }
                </th>
                <th>

                    @Html.DisplayNameFor(model => model.Enrollees.First().Patronymic)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Enrollees.First().DateOfBirth)
                </th>

                <th>
                    @Html.DisplayNameFor(model => model.Enrollees.First().IdEducationType)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Enrollees.First().YearOfEndingEducation)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Enrollees.First().GradePointAVG)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Enrollees.First().IdFirstSpec)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Enrollees.First().IdGroup)
                </th>
                <th>
                    Специа льность
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Enrollees.First().ArrivalDate)
                </th>

                <th>
                    @Html.DisplayNameFor(model => model.Enrollees.First().DateOfDeduction)
                </th>


                @if (SignInManager.IsSignedIn(User) && (User.IsInRole("Admin") || User.IsInRole("EditAbitur")))
                {
                    <th />
                }
                @if (SignInManager.IsSignedIn(User) && (User.IsInRole("Admin") || User.IsInRole("FullDetailAbitur")))
                {
                    <th />
                }
                @if (SignInManager.IsSignedIn(User) && (User.IsInRole("Admin") || User.IsInRole("DeleteAbitur")))
                {
                    <th />
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Enrollees)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.NumOfPersonalFile)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Surname)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Patronymic)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DateOfBirth)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.IdEducationTypeNavigation.NameEducationType)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.YearOfEndingEducation)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.GradePointAVG)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.IdFirstSpecNavigation.NameSpeciality)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.IdGroupNavigation.GroupName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.IdCurrentSpecNavigation.NameSpeciality)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ArrivalDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DateOfDeduction)
                    </td>

                    @if (SignInManager.IsSignedIn(User) && (User.IsInRole("Admin") || User.IsInRole("EditAbitur")))
                    {
                        <td>
                            <a asp-action="Edit" asp-route-id="@item.IdEnrollee"><img src="~/images/edit.png" width="500" height="500" title="Изменить" class="img-responsive" /></a>
                        </td>
                    }
                    @if (SignInManager.IsSignedIn(User) && (User.IsInRole("Admin") || User.IsInRole("FullDetailAbitur")))
                    {
                        <td>
                            <a asp-action="Details" asp-route-id="@item.IdEnrollee"><img src="~/images/info.png" width="500" height="500" title="Просмотреть детальную информацию" class="img-responsive" /></a>
                        </td>
                    }
                    @if (SignInManager.IsSignedIn(User) && (User.IsInRole("Admin") || User.IsInRole("DeleteAbitur")))
                    {
                        <td>
                            <a asp-action="Delete" asp-route-id="@item.IdEnrollee"><img src="~/images/delete.png" width="500" height="500" title="Перейти к удалению данной записи" class="img-responsive" /></a>
                        </td>
                    }

                </tr>
            }
        </tbody>
    </table>
    @if (Model.PageViewModel.HasNextPage || Model.PageViewModel.HasPreviousPage)
    {
        <div class="col-md-6 col-lg-6 col-xl-6 text-left">
            <div class="btn-group" data-toggle="buttons">
                @if (Model.PageViewModel.HasPreviousPage && Model.PageViewModel.PageNumber != 2)
                {
                    <input name="page" type="radio" onchange="this.form.submit();" hidden="hidden" checked="checked" value="1">
                    <label class="btn btn-default">
                        <input name="page" type="radio" onchange="this.form.submit();" value="1"> <i class="glyphicon glyphicon-chevron-left"></i>
                        <i class="glyphicon glyphicon-chevron-left"></i> В начало
                    </label>
                }
                @if (Model.PageViewModel.HasPreviousPage)
                {
                    <label class="btn btn-default">
                        <input name="page" type="radio" onchange="this.form.submit();" value="@(Model.PageViewModel.PageNumber - 1)"> <i class="glyphicon glyphicon-chevron-left"></i> Назад
                    </label>
                }
                @if (Model.PageViewModel.HasNextPage || Model.PageViewModel.HasPreviousPage)
                {
                    <label class="btn btn-default" style="pointer-events:none;">
                        <input name="page" type="radio" style="pointer-events:none;" value="@(Model.PageViewModel.PageNumber)"> @(Model.PageViewModel.PageNumber) / @Model.PageViewModel.TotalPages
                    </label>
                }
                @if (Model.PageViewModel.HasNextPage)
                {
                    <label class="btn btn-default">
                        <input name="page" type="radio" onchange="this.form.submit();" value="@(Model.PageViewModel.PageNumber + 1)"> Вперед <i class="glyphicon glyphicon-chevron-right"></i>
                    </label>
                }
                @if (Model.PageViewModel.HasNextPage)
                {
                    <label class="btn btn-default">
                        <input name="page" type="radio" onchange="this.form.submit();" value="@(Model.PageViewModel.TotalPages)">В конец <i class="glyphicon glyphicon-chevron-right"> </i><i class="glyphicon glyphicon-chevron-right"> </i>
                    </label>
                }
            </div>
        </div>
    }
    <br />
</form>

@section Scripts {
    <script>
        $("#slider-range").slider({
            range: true,
            min: 0,
            max: 500,
            values: [@Model.FilterViewModel.SelectedGradePointAVG_min, @Model.FilterViewModel.SelectedGradePointAVG_max],
            slide: function (event, ui) {
                $("#amount").val(ui.values[0] / 100 + "–" + ui.values[1] / 100);
                $("#minGradePoint").val(ui.values[0]);
                $("#maxGradePoint").val(ui.values[1]);
            }
        });
        $("#amount").val($("#slider-range").slider("values", 0) / 100 + "–" + $("#slider-range").slider("values", 1) / 100);

    </script>
    <script>
        $("#slider-range-year-edu").slider({
            range: true,
            min: 1970,
            max: @(DateTime.Now.Year+5),
            values: [@Model.FilterViewModel.SelectedYearEducMin, @Model.FilterViewModel.SelectedYearEducMax],
            slide: function (event, ui) {
                $("#amount-year-edu").val(ui.values[0] + "–" + ui.values[1]);
                $("#minYear").val(ui.values[0]);
                $("#maxYear").val(ui.values[1]);

            }
        });
        $("#amount-year-edu").val($("#slider-range-year-edu").slider("values", 0) +"–"+ $("#slider-range-year-edu").slider("values", 1));

    </script>

    <script>
        $(document).ready(function () {
            $('#eduType').multiselect({
                enableFiltering: true,
                includeResetOption: true,
                includeSelectAllOption: false,
                maxHeight: 200
            });
        });
    </script>
    <script>
        $(document).ready(function () {
            $('#fSpec').multiselect({
                enableFiltering: true,
                includeResetOption: true,
                includeSelectAllOption: false,
                maxHeight: 200
            });
        });
    </script>
    <script>
        $(document).ready(function () {
            $('#cSpec').multiselect({
                enableFiltering: true,
                includeResetOption: true,
                includeSelectAllOption: false,
                maxHeight: 200
            });
        });
    </script>
    <script>
        $(document).ready(function () {
            $('#groups').multiselect({
                enableFiltering: true,
                includeResetOption: true,
                includeSelectAllOption: false,
                maxHeight: 200
            });
        });
    </script>
    <script>
        $(document).ready(function () {
            $('#maritalStatus').multiselect({
                enableFiltering: false,
                includeResetOption: false,
                includeSelectAllOption: false,
                maxHeight: 200
            });
        });
    </script>
    <script>
        $(document).ready(function () {
            $('#preemptiveRight').multiselect({
                enableFiltering: false,
                includeResetOption: false,
                includeSelectAllOption: false,
                maxHeight: 200
            });
        });
    </script>

}